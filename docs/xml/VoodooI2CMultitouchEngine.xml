<?xml version='1.0' encoding='utf-8'?>
<class id="VoodooI2CMultitouchEngine" interface="true" name="VoodooI2CMultitouchEngine" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <base access="public">
    <type name="IOService" />
  </base>
  <subclass access="public" name="VoodooI2CCSGestureEngine" ref="VoodooI2CCSGestureEngine#VoodooI2CCSGestureEngine" />
  <variable id="VoodooI2CMultitouchEngine::gMetaClass" name="gMetaClass">
    <type name="MetaClass" ref="VoodooI2CMultitouchEngine::MetaClass#VoodooI2CMultitouchEngine::MetaClass" />
  </variable>
  <variable id="VoodooI2CMultitouchEngine::metaClass" name="metaClass">
    <type name="OSMetaClass" qualifier=" const const *" />
  </variable>
  <class name="MetaClass" ref="VoodooI2CMultitouchEngine::MetaClass#VoodooI2CMultitouchEngine::MetaClass" />
  <constructor abstract="yes" id="VoodooI2CMultitouchEngine::VoodooI2CMultitouchEngine" name="VoodooI2CMultitouchEngine" />
  <method abstract="yes" id="VoodooI2CMultitouchEngine::getMetaClass" name="getMetaClass" virtual="yes">
    <return>
      <type name="OSMetaClass" qualifier=" const *" />
    </return>
  </method>
  <method abstract="yes" id="VoodooI2CMultitouchEngine::getScore" name="getScore" virtual="yes">
    <return>
      <type name="UInt8" />
    </return>
  </method>
  <method abstract="yes" id="VoodooI2CMultitouchEngine::handleInterruptReport" name="handleInterruptReport" virtual="yes">
    <return>
      <type name="MultitouchReturn" ref="index#MultitouchReturn" />
    </return>
    <argument id="VoodooI2CMultitouchEngine::handleInterruptReport::event" name="event">
      <type name="VoodooI2CMultitouchEvent" ref="VoodooI2CMultitouchEvent#VoodooI2CMultitouchEvent" />
    </argument>
    <argument id="VoodooI2CMultitouchEngine::handleInterruptReport::timestamp" name="timestamp">
      <type name="AbsoluteTime" />
    </argument>
  </method>
  <method abstract="yes" id="VoodooI2CMultitouchEngine::start" name="start" virtual="yes">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="VoodooI2CMultitouchEngine::start::provider" name="provider">
      <type name="IOService" qualifier="*" />
    </argument>
  </method>
  <method abstract="yes" id="VoodooI2CMultitouchEngine::stop" name="stop" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="VoodooI2CMultitouchEngine::stop::provider" name="provider">
      <type name="IOService" qualifier="*" />
    </argument>
  </method>
  <field access="protected" id="VoodooI2CMultitouchEngine::interface" name="interface">
    <type name="VoodooI2CMultitouchInterface" qualifier="*" ref="VoodooI2CMultitouchInterface#VoodooI2CMultitouchInterface" />
  </field>
  <constructor abstract="yes" access="protected" id="VoodooI2CMultitouchEngine::VoodooI2CMultitouchEngine" name="VoodooI2CMultitouchEngine">
    <argument id="VoodooI2CMultitouchEngine::VoodooI2CMultitouchEngine::" name="">
      <type name="OSMetaClass" qualifier=" const *" />
    </argument>
  </constructor>
  <destructor abstract="yes" access="protected" id="VoodooI2CMultitouchEngine::~VoodooI2CMultitouchEngine" name="~VoodooI2CMultitouchEngine" virtual="yes" />
  <variable access="private" id="VoodooI2CMultitouchEngine::superClass" name="superClass">
    <type name="OSMetaClass" qualifier=" const const *" />
  </variable>
</class>
